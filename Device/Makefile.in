#  $Id$
#
#  Makefile.in for the AHI preferences program
#


# The CPU to generate code for:

CPU	= 68060

#Can be 68K, GEN, PPC:

VER	= 68K

include Makefile.opt


#
# Autoconfig stuff
########################################

@SET_MAKE@

top_srcdir	= @top_srcdir@
srcdir		= @srcdir@
prefix		= @prefix@
DISTDIR		= @DISTDIR@
DEVSDIR		= ${DISTDIR}/User/Devs
CATDIR		= ${DISTDIR}/User/Catalogs

build_os	= @build_os@

CC		= @CC@
AS		= @AS@
INSTALL		= @INSTALL@
INSTALL_PROGRAM	= @INSTALL_PROGRAM@
INSTALL_DATA	= @INSTALL_DATA@
FLEXCAT		= @FLEXCAT@
ASM		= @ASM@

CPPFLAGS	= @CPPFLAGS@ -I.. -I${srcdir} -I${top_srcdir} -DVERSION$(VER)
CFLAGS		= @CFLAGS@ -O3 -m$(CPU)
ASFLAGS		= @ASFLAGS@ -m$(CPU)
LDFLAGS		= @LDFLAGS@ -nostartfiles
LIBS		= @LIBS@
ASMFLAGS	= I INCLUDE:,@srcdir@ SYMDEBUG LINEDEBUG \
		  QUIET NOEXE OPT NRQBPSMD \
		  MACHINE $(CPU) SET "VERSION$(VER)"

VPATH		= @srcdir@


ifeq ($(strip $(FLEXCAT)),)
FLEXCAT		= @echo 'FlexCat not found; cannot make $@!'; false \#
endif

ifeq ($(strip $(ASM)),)
ASM		= @echo 'No suitable assembler found; cannot make $@!'; false \#
endif


#
# Files
########################################

OBJECTS		= header.o device.o devcommands.o devsupp.o \
		  localize.o modeinfo.o requester.o database.o debug.o\
		  asmfuncs.o audioctrl.o effectinit.o sound.o misc.o\
		  elfloader.o

ifeq ($(VER),68K)
OBJECTS		+= dspecho_68k.o mixer_68k.o
else
OBJECTS		+= dspecho.o mixer.o
endif

TARGET		= ahi.device.$(VER)-$(CPU)

ifeq ($(VER),PPC)
CC		= ppc-amigaos-gcc
CFLAGS		= @CFLAGS@ -V egcs-2.91.60 -mcpu=$(CPU)
LDFLAGS		= -V egcs-2.91.60 -nostartfiles -r 
LIBS		=
OBJECTS		= ppcheader.o dspecho.o mixer.o
TARGET		= ahi.elf.$(CPU)
endif


LANGUAGES	= $(notdir $(basename $(wildcard $(srcdir)/translations/*.ct)))
CATALOGS	= $(addsuffix .catalog, $(LANGUAGES))


#
# Targets
########################################

.PHONY:		all mostlyclean clean distclean maintainer-clean\
		bindist bindist-install install revup


all:		$(TARGET) $(srcdir)/ahi.ct $(CATALOGS)

mostlyclean:
	$(RM) $(TARGETS) *.o *.bak *~ \#*\# core Makefile.dep Makefile.opt

clean:		mostlyclean
	$(RM) $(CATALOGS) localize.c localize.h version.h version.i \
	      ahi.device.*

distclean:	clean
	$(RM) Makefile

maintainer-clean: distclean

bindist:	$(srcdir)/ahi.ct $(CATALOGS)
	$(INSTALL) --directory $(CATDIR)
	$(INSTALL_DATA) ${srcdir}/ahi.cd $(CATDIR)
	$(INSTALL_DATA) ${srcdir}/ahi.ct $(CATDIR)
	for i in $(LANGUAGES); do \
	  $(INSTALL) --directory $(CATDIR)/$$i; \
	  $(INSTALL_DATA) $$i.catalog $(CATDIR)/$$i/ahi.catalog; \
	done

	$(INSTALL) --directory $(DEVSDIR)

	make clean
	make bindist-install VER=68K CPU=68000

	make clean
	make bindist-install VER=68K CPU=68020

	make clean
	make bindist-install VER=68K CPU=68030

	make clean
	make bindist-install VER=68K CPU=68040

	make clean
	make bindist-install VER=68K CPU=68060

	make clean
	make bindist-install VER=GEN CPU=68000

	make clean
	make bindist-install VER=GEN CPU=68020

	make clean
	make bindist-install VER=GEN CPU=68030

	make clean
	make bindist-install VER=GEN CPU=68040

	make clean
	make bindist-install VER=GEN CPU=68060

	make clean
	make bindist-install VER=PPC CPU=603e

	make clean
	make bindist-install VER=PPC CPU=604e


bindist-install: $(TARGET)
	$(INSTALL_PROGRAM) --strip $(TARGET) $(DEVSDIR)/$(TARGET)


install:	$(TARGET)
	$(INSTALL_PROGRAM) $(TARGET) $(PREFIX)/Devs/$(basename $(TARGET))


version.i:	version.rev
	@echo Creating $@
	@ver=`cat $(top_srcdir)/version.ver` \
	 rev=`cat $(srcdir)/version.rev` && \
	 echo "VERSION  EQU $$ver" >$@ && \
	 echo "REVISION EQU $$rev" >>$@

version.h:	version.rev version.date
	@echo Creating $@
	@ver=`cat $(top_srcdir)/version.ver` \
	 rev=`cat $(srcdir)/version.rev` \
	 date=`cat $(srcdir)/version.date` && \
	 echo "#define VERSION $$ver" > $@ && \
	 echo "#define REVISION $$rev" >> $@ && \
	 echo "#define VERS \"$$ver.$$rev ($$date)\"" >> $@

revup:
	@rev=`cat $(srcdir)/version.rev` && echo `expr $$rev + 1` > $(srcdir)/version.rev
	@date +%d.%m.%y > $(srcdir)/version.date
	@echo -n "New revision: "
	@cat $(srcdir)/version.rev

#
# Auto-remake autoconf stuff
########################################

Makefile: Makefile.in ../config.status
	(cd .. && ./config.status)


#
# Rules
########################################

%.o:	%.s
	$(AS) $(ASFLAGS) $< -o $@

asmfuncs.o devsupp.o dspecho_68k.o mixer_68k.o:
	$(ASM) $(ASMFLAGS) $< TO $@

$(TARGET):	$(OBJECTS)
	$(CC) $(LDFLAGS) $^ $(LIBS) -o $@

localize.c:	ahi.cd C_c_AHI.sd
	$(FLEXCAT) $(srcdir)/ahi.cd localize.c=$(srcdir)/C_c_AHI.sd 

localize.h:	ahi.cd C_c_AHI.sd
	$(FLEXCAT) $(srcdir)/ahi.cd localize.h=$(srcdir)/C_h_AHI.sd

%.catalog:	translations/%.ct
	$(FLEXCAT) $(srcdir)/ahi.cd $< CATALOG $@

%.ct:
	$(FLEXCAT) $(srcdir)/ahi.cd $@ NEWCTFILE $@


#
# Dependencies
########################################

SOURCES		= $(notdir $(wildcard $(srcdir)/*.c))
HEADERS		= $(notdir $(wildcard $(srcdir)/*.h))

Makefile.dep:	$(SOURCES) $(HEADERS) localize.c localize.h version.h
	@echo Making $@
ifneq ($(build_os),amigaos)
	-@$(CC) $(CPPFLAGS) $(CFLAGS) -MM $(SOURCES) > $@
else
	-@touch $@
	-@makedepend -f $@ -I $(srcdir) $(SOURCES)
endif

include Makefile.dep

asmfuncs.o:	asmfuncs.s ahi_def.i
devsupp.o:	devsupp.s
dspecho_68k.o:	dspecho_68k.s ahi_def.i dsp.i
mixer_68k.o:	mixer_68k.s ahi_def.i dsp.i

$(wildcard $(srcdir)/translations/*.ct) $(srcdir)/ahi.ct:	ahi.cd

#
# Options
########################################

Makefile.opt:
	echo CPU = $(CPU) > $@
	echo VER = $(VER) >> $@
