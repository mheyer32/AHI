# $Id$
# $Log$
# Revision 4.18  1998/01/29 23:09:47  lcs
# Playing with anticlick
#
# Revision 4.17  1998/01/13 20:24:04  lcs
# Generic c version of the mixer finished.
#
# Revision 4.16  1998/01/12 20:07:28  lcs
# More restruction, mixer in C added. (Just about to make fraction 32 bit!)
#
# Revision 4.15  1997/12/21 17:41:50  lcs
# Major source cleanup, moved some functions to separate files.
#
# Revision 4.14  1997/11/23 13:06:18  lcs
# Reordered the object files (problem with 16 bit offsets).
#
# Revision 4.13  1997/10/23 01:10:03  lcs
# Better debug output.


##
## Definitions
##
###############################################################################

CPU	= 68030            # The CPU to generate code for.
MATH	= STANDARD         # What math code to generate
#MATH	= soft-float
VER	= VERSION68K       # This constant will be defined. Can be VERSION68K,
                           # VERSIONPPC or VERSIONGEN.

OPTIMIZE= OPTIMIZE OPTTIME OPTSCHED
TARGET	= AHI:User/Devs/ahi.device


## Sources

SRCCOMMON = asmfuncs.a audioctrl.c database.c debug.c devcommands.c device.c\
devsupp.a effectinit.c footer.a header.a modeinfo.c requester.c sound.c

SRC68K	= dspecho_68k.a mixer_68k.a

SRCPPC	= dspecho_ppc.c mixer_ppc.c

SRCGEN	= dspecho_generic.c mixer_generic.c

SOURCES = $(SRCCOMMON) $(SRC68K) $(SRCPPC) $(SRCGEN)


## Prototypes

PROTOS = CSOURCE asmfuncs.a debug.c CSOURCE devsupp.a requester.c device.c\
audioctrl.c CSOURCE mixer_68k.a mixer_ppc.c mixer_generic.c modeinfo.c\
database.c effectinit.c devcommands.c sound.c\
dspecho_generic.c dspecho_ppc.c CSOURCE dspecho_68k.a


## Objects

OBJCOMMON = header.o device.o devcommands.o devsupp.o\
localize.o modeinfo.o requester.o database.o debug.o\
asmfuncs.o audioctrl.o effectinit.o sound.o footer.o

OBJ68K	= dspecho_68k.o mixer_68k.o

OBJPPC	= dspecho_ppc.o mixer_ppc.o

OBJGEN	= dspecho_generic.o mixer_generic.o

OBJECTS68k = $(OBJCOMMON) $(OBJ68K)
OBJECTSPPC = $(OBJCOMMON) $(OBJPPC)
OBJECTSGEN = $(OBJCOMMON) $(OBJGEN)

OBJECTS	= $(OBJCOMMON) $(OBJ68K) $(OBJPPC) $(OBJGEN)

## Link libraries

LIBCOMMON = LIB LIB:scnb.lib LIB:debug.lib LIB:amiga.lib

LIB68K	=

LIBPPC	= LIB:scm881nb.lib

LIBGEN	= LIB:scm881nb.lib

LIBRARIES68K = $(LIBCOMMON) $(LIB68K)
LIBRARIESPPC = $(LIBCOMMON) $(LIBPPC)
LIBRARIESGEN = $(LIBCOMMON) $(LIBGEN)


## Files to RCS

RCSFILES= $(SOURCES) ahi_def.h ahi_def.i ahi_device.h dsp.i dsp.h\
ahi.cd C_c_AHI.sd C_h_AHI.sd smakefile


## Programs and arguments

CCOMP	= SC:c/sc
CFLAGS = CPU=$(CPU) MATH=$(MATH) DEFINE $(VER) NOLINK DEBUG=FULL\
PARAMETERS=REGISTERS CODE=FAR DATA=FARONLY STRINGSECTION=CODE ABSFUNCPOINTER\
NOSTACKCHECK UNSIGNEDCHARS UTILITYLIBRARY\
NOVERSION NOICONS MEMORYSIZE=HUGE GST=gst\
#$(OPTIMIZE)

#CCOMP	= gcc
#CFLAGS	= -m$(CPU) -m$(MATH) -D$(VER) -c -g \
#-noixemul -mregparm=4 -mfixedstack -funsigned-char \
#-Wall -W -Wstrict-prototypes\
#-O2 -ffast-math -funroll-loops

ASM	= Programmering:PhxAss/Bin/PhxAss
AFLAGS	= I INCLUDE: SYMDEBUG LINEDEBUG QUIET NOEXE OPT NRQBPSMD MACHINE $(CPU)\
          SET "$(VER)"

LINKER	= SC:c/slink
LFLAGS	= ADDSYM NOICONS SMALLDATA SMALLCODE DEFINE @__chkabort=@__dummy\
          DEFINE @_CXBRK=@__dummy MAP ahi.map,x NOALVS 


##
## Targets
##	
###############################################################################

$(TARGET): $(OBJECTS68K)
	$(LINKER) $(LFLAGS) $(LIBRARIES68K) TO Devs:ahi.device FROM $(OBJECTS68K)
	$(LINKER) FROM Devs:ahi.device to $(TARGET) ND NOICONS

$(TARGET).ppc: $(OBJECTSPPC)
	$(LINKER) $(LFLAGS) $(LIBRARIESPPC) TO Devs:ahi.device FROM $(OBJECTSPPC)
	$(LINKER) FROM Devs:ahi.device to $(TARGET) ND NOICONS

$(TARGET).gen: $(OBJECTSGEN)
	$(LINKER) $(LFLAGS) $(LIBRARIESGEN) TO Devs:ahi.device FROM $(OBJECTSGEN)
	$(LINKER) FROM Devs:ahi.device to $(TARGET) ND NOICONS


mc000:
	smake $(TARGET) CPU=68000
	move $(TARGET) $(TARGET).000

mc030:
	smake $(TARGET) CPU=68030
	move $(TARGET) $(TARGET).030

mc040:
	smake $(TARGET) CPU=68040 MATH=68881
	move $(TARGET) $(TARGET).040

mc060:
	smake $(TARGET) CPU=68060 MATH=68881
	move $(TARGET) $(TARGET).060

ppc040:
	smake $(TARGET).ppc040 CPU=68040 MATH=68881 VER=VERSIONPPC

ppc060:
	smake $(TARGET).ppc060 CPU=68060 MATH=68881 VER=VERSIONPPC

gen:
	smake $(TARGET).gen CPU=68030 MATH=68881 VER=VERSIONGEN

##
## CPU=68000, CPU=68030 and CPU=68060 versions
##
###############################################################################

device:
	smake allclean
	smake protos

	smake clean
	smake mc000

	smake clean
	smake mc060

	smake clean
	smake mc030


##
## Support files
##
###############################################################################

support: includes autodocs catalogs


##
## Everything!
##
###############################################################################

dist:	device support


##
## Revision counter
##
###############################################################################

ahi.device_rev.i: $(SOURCES)
	@revup VERSION 4 PROJECTNAME ahi.device ASM TINY


##
## Depend
##
###############################################################################

depend:
	makedepend -f smakefile $(SOURCES)


##
## Check in all files
##
###############################################################################

ci:
	ci -l4 $(RCSFILES)


##
## Remove all objects
##
###############################################################################

clean:
	--delete localize.(c|h) QUIET
	--delete gst QUIET
	--delete \#?.(o|lnk|info|map|lst|bak) QUIET
	--avail flush   # Flush gst from memory

allclean:
	smake clean
	--delete $(TARGET)(%|.\#?) QUIET
	--delete \#?protos.h QUIET


##
## Prototypes
##
###############################################################################

protos:	localize.h
	$(CCOMP) GPROTO NOGENPROTOTYPEDEFS $(CFLAGS) $(PROTOS)

	copy TO mixer_protos.h <<
	\#ifdef VERSION68K
	\#include "mixer_68k_protos.h"
	\#endif
	\#ifdef VERSIONPPC
	\#include "mixer_ppc_protos.h"
	\#endif
	\#ifdef VERSIONGEN
	\#include "mixer_generic_protos.h"
	\#endif
	< 

	copy TO dspecho_protos.h <<
	\#ifdef VERSION68K
	\#include "dspecho_68k_protos.h"
	\#endif
	\#ifdef VERSIONPPC
	\#include "dspecho_ppc_protos.h"
	\#endif
	\#ifdef VERSIONGEN
	\#include "dspecho_generic_protos.h"
	\#endif
	< 


##
## GST
##
###############################################################################


gst:
	# Don't cache my own include files
	grep -h "\#include <" *.c > gst.c
	$(CCOMP) NOOBJNAME $(CFLAGS) MGST=gst gst.c
	delete gst.c QUIET

##
## All objects
##
###############################################################################

.a.o:
	$(ASM) $(AFLAGS) $*.a

.c.o:
	$(CCOMP) $(CFLAGS) $*.c

localize.c:	ahi.cd C_c_AHI.sd
	FlexCat ahi.cd localize.c=C_c_AHI.sd 

localize.h:	ahi.cd C_c_AHI.sd
	FlexCat ahi.cd localize.h=C_h_AHI.sd

localize.o:	localize.c ahi_def.h

$(OBJECTS):	gst

# Asm dependencies

asmfuncs.o:	asmfuncs.a ahi_def.i
devsupp.o:	devsupp.a
dspecho_68k.o:	dspecho_68k.a ahi_def.i dsp.i
footer.o:	footer.a
header.o:	header.a ahi_def.i ahi.device_rev.i

#	$(ASM) $(AFLAGS) header.a

mixer_68k.o:	mixer_68k.a ahi_def.i dsp.i
	


##
## Build include files
##
###############################################################################

includes:
	# Assembler library offsets
	fd2pragma AHIINC:FD/ahi_lib.fd     22 TO AHIINC:Asm/lvo/ahi_lib.i
	fd2pragma AHIINC:FD/ahi_sub_lib.fd 22 TO AHIINC:Asm/lvo/ahi_sub_lib.i
	# Storm pragma & proto
	fd2pragma AHIINC:FD/ahi_lib.fd      5 TO AHIINC:Storm/pragma/ahi_lib.h COMMENT
	fd2pragma AHIINC:FD/ahi_sub_lib.fd  5 TO AHIINC:Storm/pragma/ahi_sub_lib.h COMMENT
	fd2pragma AHIINC:FD/ahi_lib.fd     30 TO AHIINC:Storm/proto/ahi.h
	fd2pragma AHIINC:FD/ahi_sub_lib.fd 30 TO AHIINC:Storm/proto/ahi_sub.h
	# SAS/C pragmas & proto
	fd2pragma AHIINC:FD/ahi_lib.fd      3 TO AHIINC:SAS/pragmas/ahi_pragmas.h COMMENT
	fd2pragma AHIINC:FD/ahi_sub_lib.fd  3 TO AHIINC:SAS/pragmas/ahi_sub_pragmas.h COMMENT
	fd2pragma AHIINC:FD/ahi_lib.fd     33 TO AHIINC:SAS/proto/ahi.h
	fd2pragma AHIINC:FD/ahi_sub_lib.fd 33 TO AHIINC:SAS/proto/ahi_sub.h
	# GeekGadgets gcc inlines
	fd2inline AHIINC:FD/ahi_lib.fd\
	          AHIINC:C/clib/ahi_protos.h\
	       -o AHIINC:GG/inline/ahi.h
	fd2inline AHIINC:FD/ahi_sub_lib.fd\
	          AHIINC:C/clib/ahi_sub_protos.h\
	       -o AHIINC:GG/inline/ahi_sub.h
	# E modules
	copy AHIINC:FD/ahi_lib.fd AHIINC:FD/ahi_sub_lib.fd AHIINC:E
	Programmering:AmigaE/Bin/FD2Module AHIINC:E/ahi
	Programmering:AmigaE/Bin/FD2Module AHIINC:E/ahi_sub
	--makedir AHIINC:E/devices AHIINC:E/libraries
	rep AHIINC:Asm/devices/ahi.i Fixed LONG AHIINC:E/devices/ahi.i
	rep AHIINC:Asm/libraries/ahi_sub.i Fixed LONG AHIINC:E/libraries/ahi_sub.i
	Programmering:AmigaE/Bin/IConvert AHIINC:E/devices/ahi.i
	Programmering:AmigaE/Bin/IConvert AHIINC:E/libraries/ahi_sub.i
	delete AHIINC:E/\#?.fd AHIINC:E/\#?/\#?.i


##
## Build autodoc files
##
###############################################################################

autodocs:
	join asmfuncs.a \#?.c AS T:AHI-AD.tmp

#	robodoc >NIL: T:AHI-AD.tmp ahi.doc GUIDE SORT GENXREF T:ahi.xref
#	robodoc >NIL: AHI:Developer/drivers/paula/paula_audio.a ahi_sub.doc GUIDE SORT GENXREF T:ahi_sub.xref

	robodoc T:AHI-AD.tmp ahi.doc TOC SORT #XREF T:ahi_sub.xref
	robodoc T:AHI-AD.tmp ahi.guide GUIDE SORT #XREF T:ahi_sub.xref
	robodoc T:AHI-AD.tmp ahi.html HTML SORT ;XREF T:ahi_sub.xref
	robodoc AHI:Developer/drivers/paula/paula_audio.a ahi_sub.doc TOC SORT #XREF T:ahi.xref
	robodoc AHI:Developer/drivers/paula/paula_audio.a ahi_sub.guide GUIDE SORT #XREF T:ahi.xref
	robodoc AHI:Developer/drivers/paula/paula_audio.a ahi_sub.html HTML SORT #XREF T:ahi.xref
	--move ahi.doc ahi.guide ahi.html ahi_sub.doc ahi_sub.guide ahi_sub.html AHI:Developer/Docs/ QUIET
	--delete T:ahi.xref T:ahi_sub.xref T:AHI-AD.tmp QUIET


##
## Build catalog files
##
###############################################################################

catalogs:
	# Update the translations
	list > T:catscript translations lformat\
	  "FlexCat ahi.cd %p%n NEWCTFILE %p%n"

	# Make sure the directories exist
	echo >> T:catscript "FailAt 11"
	list >> T:catscript translations lformat\
	  "MakeDir >NIL: AHI:User/Catalogs/%m"
	echo >> T:catscript "FailAt 10"

	# Make catalogs
	list >> T:catscript translations lformat\
	  "FlexCat ahi.cd %p%n CATALOG AHI:User/Catalogs/%m/ahi.catalog"

	FlexCat ahi.cd ahi.ct NEWCTFILE ahi.ct
	copy ahi.(cd|ct) AHI:User/Catalogs/
	--execute T:catscript
	delete T:catscript


##
## Dependencies (do not edit after this line, it's autogenerated data!)
##
###############################################################################

#DEPENDENCIES

asmfuncs.o: asmfuncs.a ahi_def.h ahi_device.h dsp.h

audioctrl.o: audioctrl.c ahi_def.h ahi_device.h dsp.h\
	 audioctrl_protos.h mixer_protos.h asmfuncs_protos.h debug_protos.h

database.o: database.c ahi_def.h ahi_device.h dsp.h database_protos.h\
	 debug_protos.h

debug.o: debug.c ahi_def.h ahi_device.h dsp.h debug_protos.h

devcommands.o: devcommands.c ahi_def.h ahi_device.h dsp.h\
	 devcommands_protos.h device_protos.h devsupp_protos.h

device.o: device.c ahi_def.h ahi_device.h dsp.h localize.h\
	 device_protos.h devcommands_protos.h

devsupp.o: devsupp.a

effectinit.o: effectinit.c ahi_def.h ahi_device.h dsp.h\
	 effectinit_protos.h asmfuncs_protos.h mixer_protos.h

footer.o: footer.a

header.o: header.a

modeinfo.o: modeinfo.c ahi_def.h ahi_device.h dsp.h localize.h\
	 modeinfo_protos.h audioctrl_protos.h debug_protos.h

requester.o: requester.c ahi_def.h ahi_device.h dsp.h localize.h\
	 requester_protos.h asmfuncs_protos.h debug_protos.h

sound.o: sound.c ahi_def.h ahi_device.h dsp.h sound_protos.h\
	 debug_protos.h effectinit_protos.h

dspecho_68k.o: dspecho_68k.a ahi_def.h ahi_device.h dsp.h

mixer_68k.o: mixer_68k.a ahi_def.h ahi_device.h dsp.h

dspecho_ppc.o: dspecho_ppc.c

mixer_ppc.o: mixer_ppc.c

dspecho_generic.o: dspecho_generic.c ahi_def.h ahi_device.h dsp.h

mixer_generic.o: mixer_generic.c ahi_def.h ahi_device.h dsp.h\
	 mixer_generic_protos.h asmfuncs_protos.h

